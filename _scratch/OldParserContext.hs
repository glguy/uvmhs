module UVMHS.Lib.Parser.ParserContext where

-- import UVMHS.Core
-- import UVMHS.Lib.NewPretty
-- import UVMHS.Lib.Parser.Loc
-- import UVMHS.Lib.Parser.Sep

-- -- # ParserContextDoc
--
-- data ParserContextMode = ParserContextDisplay | ParserContextError
--   deriving (Eq,Ord)
--
-- newtype  ParserContextDoc = ParserContextDoc { runParserContextDoc ‚à∑ RWS ParserContextMode Doc () () }
--   deriving (Null,Append,Monoid)
-- instance Pretty ParserContextDoc where pretty = execParserContextDoc
--
-- onParserContextDoc ‚à∑ (RWS ParserContextMode Doc () () ‚Üí RWS ParserContextMode Doc () ()) ‚Üí ParserContextDoc ‚Üí ParserContextDoc
-- onParserContextDoc f = ParserContextDoc ‚àò f ‚àò runParserContextDoc
--
-- execParserContextDoc ‚à∑ ParserContextDoc ‚Üí Doc
-- execParserContextDoc = evalRWS ParserContextDisplay () ‚àò retOut ‚àò runParserContextDoc
--
-- parserContextError ‚à∑ ParserContextDoc ‚Üí ParserContextDoc
-- parserContextError = onParserContextDoc $ local ParserContextError
--
-- data ParserContextDocCached = ParserContextDocCached
--   { parserContextDocCachedDoc ‚à∑ ParserContextDoc
--   -- , parserContextDocCachedBytes ‚à∑ ùëÑ OutputElemNF
--   }
-- instance Eq ParserContextDocCached where (==) = (‚â°) `on` (ppRenderWide ‚àò execParserContextDoc ‚àò parserContextDocCachedDoc) -- (‚â°) `on` parserContextDocCachedBytes
-- instance Ord ParserContextDocCached where compare = (‚ãö) `on` (ppRenderWide ‚àò execParserContextDoc ‚àò parserContextDocCachedDoc) -- parserContextDocCachedBytes
-- instance Null ParserContextDocCached where null = mkParserContextDocCached null
-- instance Append ParserContextDocCached where
--   ParserContextDocCached d‚ÇÅ {- b‚ÇÅ -} ‚ß∫ ParserContextDocCached d‚ÇÇ {- b‚ÇÇ -} = ParserContextDocCached (d‚ÇÅ ‚ß∫ d‚ÇÇ) -- (b‚ÇÅ ‚ß∫ b‚ÇÇ)
-- instance Monoid ParserContextDocCached
-- instance Pretty ParserContextDocCached where
--   pretty x = concat
--     [ ppString "¬´"
--     , pretty $ parserContextDocCachedDoc x
--     , ppString "¬ª"
--     ]
--
-- mkParserContextDocCached ‚à∑ ParserContextDoc ‚Üí ParserContextDocCached
-- mkParserContextDocCached doc = ParserContextDocCached doc -- (prettyNFDoc $ execParserContextDoc doc)
--
-- onParserContextDocCached ‚à∑ (RWS ParserContextMode Doc () () ‚Üí RWS ParserContextMode Doc () ()) ‚Üí ParserContextDocCached ‚Üí ParserContextDocCached
-- onParserContextDocCached f = mkParserContextDocCached ‚àò onParserContextDoc f ‚àò parserContextDocCachedDoc
--
-- -- # ParserContextLines
--
-- data ParserContextChunk = ParserContextChunk
--   { parserContextChunkLocRange ‚à∑ AddBot LocRange
--   , parserContextChunkNewlines ‚à∑ ‚Ñï
--   , parserContextChunkDoc ‚à∑ ParserContextDocCached
--   }
--   -- deriving (Eq,Ord)
--   deriving (Eq,Ord)
-- makeLenses ''ParserContextChunk
-- makePrettySum ''ParserContextChunk
--
-- instance Null ParserContextChunk where null = ParserContextChunk bot zero null
-- instance Append ParserContextChunk where
--   ParserContextChunk r‚ÇÅ n‚ÇÅ d‚ÇÅ ‚ß∫ ParserContextChunk r‚ÇÇ n‚ÇÇ d‚ÇÇ = ParserContextChunk (r‚ÇÅ ‚äî r‚ÇÇ) (n‚ÇÅ + n‚ÇÇ) (d‚ÇÅ ‚ß∫ d‚ÇÇ)
-- instance Monoid ParserContextChunk
--
-- type ContextLines = SepR ParserContextChunk ParserContextChunk
--
-- -- # ParserContext
--
-- data ParserContext = ParserContext
--   { parserContextLocRange ‚à∑ AddBot LocRange
--   , parserContextNewlines ‚à∑ ‚Ñï
--   , parserContextLines ‚à∑ ContextLines
--   }
--   deriving (Eq,Ord)
-- makeLenses ''ParserContext
-- makePrettySum ''ParserContext
--
-- instance Null ParserContext where null = parserContextFromLines null
-- instance Append ParserContext where ParserContext l‚ÇÅ n‚ÇÅ s‚ÇÅ ‚ß∫ ParserContext l‚ÇÇ n‚ÇÇ s‚ÇÇ = ParserContext (l‚ÇÅ ‚äî l‚ÇÇ) (n‚ÇÅ + n‚ÇÇ) (s‚ÇÅ ‚ß∫ s‚ÇÇ)
-- instance Monoid ParserContext
--
-- onParserContext ‚à∑ (RWS ParserContextMode Doc () () ‚Üí RWS ParserContextMode Doc () ()) ‚Üí ParserContext ‚Üí ParserContext
-- onParserContext = alter parserContextLinesL ‚àò map ‚àò alter parserContextChunkDocL ‚àò onParserContextDocCached
--
-- execParserContext ‚à∑ ParserContext ‚Üí ParserContextDoc
-- execParserContext = concat ‚àò map (parserContextDocCachedDoc ‚àò parserContextChunkDoc) ‚àò iter ‚àò parserContextLines
--
-- parserContextFromLines ‚à∑ ContextLines ‚Üí ParserContext
-- parserContextFromLines pcl‚ÇÄ = let (lr,n) = parserContextLinesMeta pcl‚ÇÄ in ParserContext lr n pcl‚ÇÄ
--   where
--     parserContextLinesMeta pcl =
--       ( joins $ map parserContextChunkLocRange $ iter pcl
--       , sum $ map parserContextChunkNewlines $ iter pcl
--       )
--
-- truncateParserContext ‚à∑ ‚Ñï ‚Üí ParserContext ‚Üí ParserContext
-- truncateParserContext n (ParserContext _lr _n l) = parserContextFromLines $ lastNSepR n l
--
-- newtype InputContext = InputContext { unInputContext ‚à∑ ParserContext }
--   deriving (Eq,Ord,Null,Append,Monoid)
-- makePrettySum ''InputContext
-- newtype ExpressionContext = ExpressionContext { unExpressionContext ‚à∑ ParserContext }
--   deriving (Eq,Ord,Null,Append,Monoid)
-- makePrettySum ''ExpressionContext
